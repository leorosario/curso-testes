{"version":1,"defects":{"OrderBundle\\Test\\Entity\\CustomerTest::testIsAllowedToOrder#shouldBeAllowedWhenIsActiveAndNotBlocked":8,"OrderBundle\\Test\\Entity\\CustomerTest::testIsAllowedToOrder#shouldNotBeAllowedWhenIsActiveButIsBlocked":8,"OrderBundle\\Test\\Entity\\CustomerTest::testIsAllowedToOrder#shouldNotBeAllowedWhenIsNotActive":8,"OrderBundle\\Test\\Entity\\CustomerTest::testIsAllowedToOrder#shouldNotBeAllowedWhenIsNotActiveAndIsBlocked":8,"PaymentBundle\\Test\\Service\\GatewayTest::shouldNotPayWhenFailOnGateway":7},"times":{"FidelityProgramBundle\\Test\\Service\\FidelityProgramServiceTest::shouldSaveWhenReceivePoints":0.042,"FidelityProgramBundle\\Test\\Service\\FidelityProgramServiceTest::shouldNotSaveWhenReceiveZeroPoints":0.001,"OrderBundle\\Test\\Entity\\CustomerTest::testIsAllowedToOrder#shouldBeAllowedWhenIsActiveAndNotBlocked":0.002,"OrderBundle\\Test\\Entity\\CustomerTest::testIsAllowedToOrder#shouldNotBeAllowedWhenIsActiveButIsBlocked":0.001,"OrderBundle\\Test\\Entity\\CustomerTest::testIsAllowedToOrder#shouldNotBeAllowedWhenIsNotActive":0.001,"OrderBundle\\Test\\Entity\\CustomerTest::testIsAllowedToOrder#shouldNotBeAllowedWhenIsNotActiveAndIsBlocked":0.001,"OrderBundle\\Test\\Service\\BadWordsValidatorTest::testHasBadWords#shouldFindWhenHasBadWords":0.004,"OrderBundle\\Test\\Service\\BadWordsValidatorTest::testHasBadWords#shouldNotFindWhenHasNoBadWords":0.001,"OrderBundle\\Test\\Service\\BadWordsValidatorTest::testHasBadWords#shouldNotFindWhenTextIsEmpty":0.001,"OrderBundle\\Test\\Service\\BadWordsValidatorTest::testHasBadWords#shouldNotFindWhenBadWordsListIsEmpty":0.001,"OrderBundle\\Test\\Service\\CustomerCategoryServiceTest::customerShouldBeNewUser":0,"OrderBundle\\Test\\Service\\CustomerCategoryServiceTest::customerShouldBeLightUser":0,"OrderBundle\\Test\\Service\\CustomerCategoryServiceTest::customerShouldBeMediumUser":0,"OrderBundle\\Test\\Service\\CustomerCategoryServiceTest::customerShouldHeavyUser":0.002,"OrderBundle\\Test\\Service\\OrderServiceTest::shouldNotProcessWhenCustomerIsNotAllowed":0.004,"OrderBundle\\Test\\Service\\OrderServiceTest::shouldNotProcessWhenItemIsNotAvailable":0.002,"OrderBundle\\Test\\Service\\OrderServiceTest::shouldNotProcessWhenBadWordsIsFound":0.001,"OrderBundle\\Test\\Service\\OrderServiceTest::shouldSuccessfullyProcess":0.004,"OrderBundle\\Validators\\Test\\CreditCardExpirationValidatorTest::testIsValid#shouldBeValidWhenDateIsNotExpired":0.001,"OrderBundle\\Validators\\Test\\CreditCardExpirationValidatorTest::testIsValid#shouldNotBeValidWhenDateIsExpired":0,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testIsValid#shouldBeValidWhenValueIsANumber":0.001,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testIsValid#shouldBeValidWhenValueIsACreditCardAsString":0,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testIsValid#shouldNotBeValidWhenValueIsNotACreditCard":0,"OrderBundle\\Validators\\Test\\CreditCardNumberValidatorTest::testIsValid#shouldNotBeValidWhenValueIsEmpty":0.003,"OrderBundle\\Validators\\Test\\NotEmptyValidatorTest::testIsValid#shouldBeValidWhenValueIsNotEmpty":0.003,"OrderBundle\\Validators\\Test\\NotEmptyValidatorTest::testIsValid#shouldNotBeValidWhenValueIsEmpty":0,"OrderBundle\\Validators\\Test\\NumericValidatorTest::testIsValid#shouldBeValidWhenValueIsANumber":0.001,"OrderBundle\\Validators\\Test\\NumericValidatorTest::testIsValid#shouldBeValidWhenValueIsANumericString":0,"OrderBundle\\Validators\\Test\\NumericValidatorTest::testIsValid#shouldNotBeValidWhenValueIsNotANumber":0.001,"OrderBundle\\Validators\\Test\\NumericValidatorTest::testIsValid#shouldNotBeValidWhenValueIsEmpty":0,"PaymentBundle\\Test\\Service\\ArrayTest::shouldBeEmpty":0,"PaymentBundle\\Test\\Service\\ArrayTest::shouldBeFilled":0,"PaymentBundle\\Test\\Service\\GatewayTest::shouldNotPayWhenAuthenticationFail":0.003,"PaymentBundle\\Test\\Service\\GatewayTest::shouldNotPayWhenFailOnGateway":0.006,"PaymentBundle\\Test\\Service\\GatewayTest::shouldSuccessfullyPayWhenGatewayReturnOk":0.002,"PaymentBundle\\Test\\Service\\PaymentServiceTest::shouldSaveWhenGatewayReturnOkWithRetries":0.002,"PaymentBundle\\Test\\Service\\PaymentServiceTest::shouldThrowExceptionWhenGatewayFails":0.002}}